#set-option -g default-command "reattach-to-user-namespace -l zsh; cd ."
set -g default-terminal 'screen-256color'
set -g terminal-overrides ',screen-256color:Tc'
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -g history-limit 20000
# use VI
set-window-option -g mode-keys vi

# Use ctrl-a instead of ctrl-b
set -g prefix C-a
unbind C-b
bind C-a send-prefix

unbind C-f
bind C-f command-prompt "switch-client -t %%"

# kill
unbind q
bind q confirm-before "kill-window"

unbind ^x
bind ^x kill-pane

# reload config
unbind r
bind r source-file ~/.tmux.conf

unbind ^W
bind ^W split-window -p 25 '$EDITOR $(cat ~/.current-project)' \; swap-pane -D
unbind ^T
bind ^T split-window -p 25

# horizontal and vertical splits
unbind |
bind v split-window -h -c "#{pane_current_path}"
unbind _
bind - split-window -c "#{pane_current_path}"

# tile all windows
unbind =
bind = select-layout tiled

# cycle through panes
unbind ^A
bind ^A select-pane -t :.+

unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# vim style controls for copy mode
setw -g mode-keys vi
bind Escape copy-mode

# Copy to clipboard
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X select-line
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
#bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe 'parcellite -c'

# Copy to clipboard with mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'parcellite -c'


set -s escape-time 50

set -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# ======================================================================================================================
# Status bar settings
# ======================================================================================================================

# Set status position
set-option -g status-position bottom

# Set the base index for windows and panes to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber when window is closed
set -g renumber-windows on

# Activity monitoring
setw -g monitor-activity on

# Default statusbar colors
set -g status-bg black
set -g status-fg green
set -g status-attr default

# Default window title colors
setw -g window-status-fg green
setw -g window-status-bg black

# Active window title colors
setw -g window-status-current-fg black
setw -g window-status-current-bg yellow

# Pane border
set -g pane-border-fg white
set -g pane-border-bg default
set -g pane-active-border-fg brightred
set -g pane-active-border-bg default

# Command line/message text
set -g message-bg black
set -g message-fg green

# Pane number display
set -g display-panes-active-colour cyan
set -g display-panes-colour brightblue

# Status settings
set -g status on
set -g status-interval 15
set -g status-justify centre

# Status line left side
set -g status-left-length 70
set -g @online_icon "yes"
set -g @offline_icon "no"
set -g status-left "#[fg=blue] Session: #S | Host: #H"

# Status line right side
set -g status-right-length 70
set -g status-right "#[fg=blue]Battery: #{battery_percentage} | Time: %d %b %R "

# Activity
set-option -gw window-status-activity-bg black
set-option -gw window-status-activity-fg green


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
